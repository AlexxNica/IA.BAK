#!/bin/sh
# Gets stats for a specified SHARD, or ALL
set -e

SHARD="$1"
if [ -z "$SHARD" ]; then
	echo "Usage: shardstats SHARDn" >&2
	exit 1
fi
shard="$(echo "$SHARD" | tr A-Z a-z)"

if [ "$SHARD" != ALL ]; then
	DIR="/srv/shard/$shard"
	# need a non-bare clone to run git-annex info . in
	if [ ! -d "$DIR" ]; then
		mkdir -p "$(dirname "$DIR")"
		(cd "$(dirname "$DIR")" && git clone /home/"$SHARD"/"$shard".git && git config user.email stats@example.com && git config user.name stats)
	else
		(cd "$DIR" && git config gc.auto 0 && git fetch origin master git-annex && git merge origin/master)
	fi
	cd "$DIR"
	mkdir -p /var/www/html/stats/
	INFOTMP="$(tempfile)"
	git annex info . > "$INFOTMP"
	TMP="$(tempfile)"
	grep "numcopies " "$INFOTMP" > "$TMP"
	chmod 644 "$TMP"
	mv "$TMP" /var/www/html/stats/"$SHARD"
	TMP="$(tempfile)"
	perl -ne 'if (/size of annexed files in working tree: ([.0-9]+) tera/) { print "$1\n" }' < "$INFOTMP" > "$TMP"
	rm -f "$INFOTMP"
	chmod 644 "$TMP"
	mv "$TMP" /var/www/html/stats/"$SHARD".size

	TMP="$(tempfile)"
	ln -1 > "$TMP"
	chmod 644 "$TMP"
	mv "$TMP" /var/www/html/stats/"$SHARD".collections
fi

NUMTMP="$(tempfile)"
if [ "$SHARD" != ALL ]; then
	GREPSHARD="$SHARD"
	grep 'numcopies +' /var/www/html/stats/"$SHARD" > "$NUMTMP"
else
	GREPSHARD="SHARD"
	grep -h 'numcopies +' /var/www/html/stats/SHARD[0-9]* > "$NUMTMP"
	STATTMP="$(tempfile)"
	echo "numcopies stats: " > "$STATTMP"
	for n in $(seq 0 10); do
		perl -le 'BEGIN { $want=shift; $total=0 }; while (<>) { ($mult, $cnt) = m/.*numcopies \+(\d+):\s+(\d+)/; $total=$total+$cnt if $mult == $want } END { print "\tnumcopies +$want: $total" }' $n "$NUMTMP" >> "$STATTMP"
	done
	chmod 644 "$STATTMP"
	mv "$STATTMP" /var/www/html/stats/ALL
	TMP="$(tempfile)"
	perl -ne '$n+=$_; END { print "$n\n" }' /var/www/html/stats/SHARD[0-9]*.size > "$TMP"
	chmod 644 "$TMP"
	mv "$TMP" /var/www/html/stats/ALL.size
fi

perl -le 'while (<>) { ($mult, $cnt) = m/.*numcopies \+(\d+):\s+(\d+)/; $total=$total+($cnt*$mult) }; print localtime()."\t".$total' < "$NUMTMP" >> /var/www/html/stats/"$SHARD".filestransferred

mkdir -p /srv/geoip/cache
GEOLIST="$(tempfile)"
for ip in $(zgrep 'ia-bak' /var/log/auth.log.* /var/log/auth.log | grep 'Accepted publickey' | grep "$GREPSHARD" | awk '{print $11}' | sort -u); do
	if [ ! -e /srv/geoip/cache/"$ip" ]; then
		TMP="$(tempfile)"
		wget -q -O "$TMP" "freegeoip.net/json/${ip}"
		mv "$TMP" /srv/geoip/cache/"$ip"
	fi
	cat /srv/geoip/cache/"$ip" | sed 's/{.*\"country_code\"/{\"country_code\"/g' | sed 's/,\"latitude\".*/}/g' >> "$GEOLIST"
done
chmod 644 "$GEOLIST"
mv "$GEOLIST" /var/www/html/stats/"$SHARD".geolist

CONNS="$(tempfile)"
zgrep -h 'ia-bak' /var/log/auth.log.* /var/log/auth.log  | grep 'Accepted publickey' | grep "$GREPSHARD" | perl -pe 's/:.*/:00/' | uniq  -c > "$CONNS"
chmod 644 "$CONNS"
mv "$CONNS" /var/www/html/stats/"$SHARD".clientconnsperhour

if [ "$SHARD" != ALL ]; then
	# git repo grows in size fast while it's filling up; and compresses very
	# well. Save clients the transfer.
	cd /home/"$SHARD"/"$shard".git && su "$SHARD" -c -- 'git gc --aggressive --prune=all'
fi

(cd /var/www/html/stats && tar czf ../stats.tar.gz.new .)
mv /var/www/html/stats.tar.gz.new /var/www/html/stats.tar.gz
