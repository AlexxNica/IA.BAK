#!/bin/sh
set -e

# should normally be 0
NEED_PRERELEASE=0

linux_install () {
	if [ -d git-annex.linux ]; then
		if upgrade_avail ./git-annex.linux/git-annex https://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-i386.tar.gz.info; then
			rm -rf git-annex.linux
		fi
		if [ "$NEED_PRERELEASE" = 1 ] && ! [ -e git-annex.linux/.prerelease ]; then
			rm -rf git-annex.linux
		fi
	fi

	if [ ! -d git-annex.linux ]; then
		echo "Installing a recent version of git-annex ..."
		rm -f git-annex-standalone-i386.tar.gz
		if [ "$NEED_PRERELEASE" = 1 ]; then
			wget https://downloads.kitenet.net/git-annex/autobuild/i386/git-annex-standalone-i386.tar.gz
		else 
			# released version
			wget https://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-i386.tar.gz
		fi
		tar xf git-annex-standalone-i386.tar.gz
		if [ "$NEED_PRERELEASE" = 1 ]; then
			touch git-annex.linux/.prerelease
		fi
		rm -f git-annex-standalone-i386.tar.gz
		echo "Installed in $(pwd)/git-annex.linux"
		echo
	fi
}

osx_install () {
	if [ -d git-annex.osx ]; then
		if upgrade_avail ./git-annex.osx/git-annex https://downloads.kitenet.net/git-annex/OSX/current/10.10_Yosemite/git-annex.dmg.info; then
			rm -rf git-annex.osx
		fi
		if [ "$NEED_PRERELEASE" = 1 ] && ! [ -e git-annex.osx/.prerelease ]; then
			rm -rf git-annex.osx
		fi
	fi

	if [ ! -d git-annex.osx ]; then
		echo "Installing a recent version of git-annex ..."
		rm -f git-annex.dmg
		if [ "$NEED_PRERELEASE" = 1 ]; then
			wget https://downloads.kitenet.net/git-annex/autobuild/x86_64-apple-yosemite/git-annex.dmg
		else 
			# released version
			wget https://downloads.kitenet.net/git-annex/OSX/current/10.10_Yosemite/git-annex.dmg
		fi
		mkdir git-annex.osx.mnt
		hdiutil attach git-annex.dmg -mountpoint git-annex.osx.mnt
		cp -r git-annex.osx.mnt/git-annex.app/Contents/MacOS/ git-annex.osx
		hdiutil eject git-annex.osx.mnt
		if [ "$NEED_PRERELEASE" = 1 ]; then
			touch git-annex.osx/.prerelease
		fi
		rm -f git-annex.dmg
		echo "Installed in $(pwd)/git-annex.osx"
		echo
	fi
}

upgrade_avail () {
	cmd="$1"
	infourl="$2"

	installedVersion=$($cmd version | grep "version" -m 1 | sed 's/^.*\([0-9]\+\)\.\([0-9]\{8\}\).*$/\2/' | tr '\n' ' ')
	newVersion=$(wget $infourl -o /dev/null -O - | sed 's/.*distributionReleasedate = \([0-9]\{4\}\)-\([0-9]\{2\}\)-\([0-9]\{2\}\).*UTC,.*/\1\2\3/' | tr '\n' ' ')
	test -n "$newVersion" && test "$installedVersion" -lt "$newVersion"
}

case "$(uname)" in
	Darwin)
		osx_install
		;;
	*)
		linux_install
		;;
esac
